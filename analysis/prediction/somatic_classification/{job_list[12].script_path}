
# load the ml_tools functions
%run ../../metrics.py

# load the features matrix and target array
X = pd.read_pickle('X.pkl')
y = pd.read_pickle('y.pkl')

# setup cross-validation and import modules
from sklearn.model_selection import StratifiedKFold
cv_strategy = StratifiedKFold(n_splits=5)
nested_cv_strategy = StratifiedKFold(n_splits=3)

# setup imblearn
from imblearn.pipeline import make_pipeline
from imblearn.under_sampling import RandomUnderSampler

# choose a model and run it
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import GridSearchCV
parameters_grid = [
    {'randomforestclassifier__n_estimators': [100, 500, 1000, 1500], 'randomforestclassifier__criterion': ['gini', 'entropy'], 'randomforestclassifier__max_depth': [5, 10, 20, 30, 40]}
]

pipe = make_pipeline(RandomUnderSampler(ratio='majority', random_state=12),
                     RandomForestClassifier(random_state=42))

model = GridSearchCV(pipe, parameters_grid, cv=nested_cv_strategy, scoring='roc_auc', refit=True, return_train_score=True)
metrics = Metrics(model, X, y, cv_strategy, n_jobs=5, scoring=['accuracy', 'f1', 'roc_auc', 'average_precision', 'recall'])

# save the metrics
print('Save metrics...', end='')
metrics.save()
print(' done!')